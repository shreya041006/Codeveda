#include <iostream>
#include <vector>
using namespace std;

class SearchingTechnique
{
public:
    bool binarySearch(vector<int> arr, int key)
    {
        int start = 0;
        int end = arr.size() - 1;

        while (start <= end)
        {
            int mid = (start + end) / 2;

            if (arr[mid] == key)
                return true;
            else if (arr[mid] < key)
                start = mid + 1;
            else
                end = mid - 1;
        }
        return false;
    }

    bool linearSearch(vector<int> arr, int key)
    {
        for (int i = 0; i < arr.size(); i++)
        {
            if (arr[i] == key)
                return true;
        }
        return false;
    }
};

class Sorting
{
public:
    void bubbleSort(vector<int> &arr)
    {
        int n = arr.size();
        for (int i = 0; i < n - 1; i++)
        {
            for (int j = 0; j < n - i - 1; j++)
            {
                if (arr[j] > arr[j + 1])
                    swap(arr[j], arr[j + 1]);
            }
        }
    }

    
    int partition(vector<int> &arr, int low, int high)
    {
        int pivot = arr[high]; t
        int i = (low - 1);

        for (int j = low; j < high; j++)
        {
            if (arr[j] < pivot)
            {
                i++;
                swap(arr[i], arr[j]);
            }
        }
        swap(arr[i + 1], arr[high]);
        return (i + 1);
    }

    void quickSort(vector<int> &arr, int low, int high)
    {
        if (low < high)
        {
            int pi = partition(arr, low, high);
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }
};

int main()
{
    vector<int> a = {5, 3, 8, 1, 4, 9, 2, 6};
    cout << "Original array: ";
    for (int x : a) cout << x << " ";
    cout << endl;
    Sorting s;
    vector<int> bubbleArr = a;
    s.bubbleSort(bubbleArr);
    cout << "After Bubble Sort: ";
    for (int x : bubbleArr) cout << x << " ";
    cout << endl;
    vector<int> quickArr = a;
    s.quickSort(quickArr, 0, quickArr.size() - 1);
    cout << "After Quick Sort: ";
    for (int x : quickArr) cout << x << " ";
    cout << endl;
    SearchingTechnique t;
    int key = 7;
    if (t.linearSearch(quickArr, key))
        cout << "Element " << key << " found (Linear Search)" << endl;
    else
        cout << "Element " << key << " not found (Linear Search)" << endl;

    if (t.binarySearch(quickArr, key))
        cout << "Element " << key << " found (Binary Search)" << endl;
    else
        cout << "Element " << key << " not found (Binary Search)" << endl;
    return 0;
}
